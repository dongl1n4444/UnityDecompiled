using System;
using System.IO;
using System.Text;

internal class UnityGeneratedCreatorCpp : UnityGeneratedCreator
{
    private readonly string cppTemplate = "\n// GENERATED BY UNITY\n// DO NOT MODIFY, THIS FILE WILL BE OVERWRITTEN DURING NEXT BUILD\n\n#include \"pch.h\"\n#include \"UnityGenerated.h\"\n\nusing namespace Windows::Graphics::Display;\nusing namespace Windows::UI::ViewManagement;\n\nnamespace Unity\n{\n\nvoid SetupDisplay()\n{\n    $SetupDisplay$\n}\n\n}\n";
    private readonly string headerTemplate = "\n// GENERATED BY UNITY\n// DO NOT MODIFY, THIS FILE WILL BE OVERWRITTEN DURING NEXT BUILD\nnamespace Unity\n{\n    void SetupDisplay();\n}\n    ";

    internal override string[] Create(string directory)
    {
        string[] strArray = new string[] { "UnityGenerated.cpp", "UnityGenerated.h" };
        string path = Path.Combine(directory, strArray[0]);
        StringBuilder builder = new StringBuilder(this.cppTemplate);
        string displaySetupCode = base.GetDisplaySetupCode();
        builder.Replace("$SetupDisplay$", displaySetupCode);
        File.WriteAllText(path, builder.ToString());
        File.WriteAllText(Path.Combine(directory, strArray[1]), this.headerTemplate);
        return strArray;
    }

    protected override string GetDefaultFullScreenCode() => 
        base.GetDefaultFullScreenCode().Replace(".", "::");

    protected override string GetInitialOrientationsCode() => 
        base.GetInitialOrientationsCode().Replace(".", "::");

    protected override string IndentCodeLine() => 
        "\t";
}

